<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:helpersWpf="clr-namespace:ComercialBiblioteca.Ferramentas.HelpersWpf;assembly=GThorFrameworkBiblioteca"
                    xmlns:helpers="clr-namespace:GThorFrameworkWpf.Helpers">

    <system:Double x:Key="TabItemFontSize">15.67</system:Double>
    <system:Double x:Key="GroupBoxHeaderFontSize">10</system:Double>
    <system:Double x:Key="WindowTitleFontSize">20</system:Double>

    <!-- ReSharper disable once Xaml.InvalidResourceType -->
    <SolidColorBrush x:Key="MenuIconBrush" Color="{DynamicResource AccentColor2}" />

    <!-- ReSharper disable once Xaml.InvalidResourceType -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="WhiteBrush" Color="White" />
    <SolidColorBrush x:Key="SuccessBrush" Color="Green" />
    <SolidColorBrush x:Key="InfoBrush" Color="Blue" />
    <SolidColorBrush x:Key="DangerBrush" Color="Red" />
    <SolidColorBrush x:Key="WarningBrush" Color="Yellow" />

    <Style TargetType="TextBox" x:Key="GThorTextBox" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="CharacterCasing" Value="Upper" />
        <Setter Property="helpersWpf:FocoAvancado.AdvancesByEnterKey" Value="True" />
        <Setter Property="controls:TextBoxHelper.SelectAllOnFocus" Value="True" />
        <Setter Property="helpers:GThorTextBoxHelper.Trim" Value="True"></Setter>
    </Style>
    
    <Style TargetType="TextBox" x:Key="GThorTextBoxNumeroInteiro" BasedOn="{StaticResource GThorTextBox}">
        <Setter Property="helpers:GThorTextBoxHelper.NumeroInteiro" Value="True" />
    </Style>

    <Style TargetType="TextBlock" x:Key="ControlForm" BasedOn="{StaticResource MetroTextBlock}">
    </Style>

    <Style TargetType="TextBlock" x:Key="ControlFormBlack" BasedOn="{StaticResource ControlForm}">
    </Style>


    <Style TargetType="TextBox" x:Key="ComercialSearchTextBox" BasedOn="{StaticResource SearchMetroTextBox}">
        <Setter Property="CharacterCasing" Value="Upper" />
        <Setter Property="helpersWpf:FocoAvancado.AdvancesByEnterKey" Value="True" />
        <Setter Property="controls:TextBoxHelper.SelectAllOnFocus" Value="True" />
    </Style>

    <Style TargetType="PasswordBox" x:Key="ComercialPasswordBox" BasedOn="{StaticResource Win8MetroPasswordBox}">
        <Setter Property="helpersWpf:FocoAvancado.AdvancesByEnterKey" Value="True" />
        <Setter Property="controls:TextBoxHelper.SelectAllOnFocus" Value="True"></Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="ComercialComboBox" BasedOn="{StaticResource MetroComboBox}">
        <Setter Property="helpersWpf:FocoAvancado.AdvancesByEnterKey" Value="True" />
        <Setter Property="IsEditable" Value="True" />
    </Style>

    <Style TargetType="RadioButton" x:Key="ComercialRadioButton" BasedOn="{StaticResource MetroRadioButton}">
        <Setter Property="helpersWpf:FocoAvancado.AdvancesByEnterKey" Value="True" />
    </Style>

    <Style TargetType="CheckBox" x:Key="ComercialCheckBox" BasedOn="{StaticResource MetroCheckBox}">
        <Setter Property="helpersWpf:FocoAvancado.AdvancesByEnterKey" Value="True" />
    </Style>

    <Style TargetType="Button" x:Key="ComercialFlatButton" BasedOn="{StaticResource MetroFlatButton}" />

    <Style TargetType="Button" x:Key="ComercialAccentedButton" BasedOn="{StaticResource ComercialFlatButton}">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
    </Style>

    <Style TargetType="Button" x:Key="ComercialDangerButton" BasedOn="{StaticResource ComercialFlatButton}">
        <Setter Property="Background" Value="{DynamicResource DangerBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
    </Style>

    <Style TargetType="Button" x:Key="ComercialSuccessButton" BasedOn="{StaticResource ComercialFlatButton}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
    </Style>

    <Style TargetType="Button" x:Key="ComercialCleanButton" BasedOn="{StaticResource ComercialFlatButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush1}" />
    </Style>

    <Style TargetType="GroupBox" x:Key="ComercialGroupBox" BasedOn="{StaticResource MetroGroupBox}">
        <Setter Property="Background"
                Value="{DynamicResource AccentColorBrush4}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="{DynamicResource AccentColorBrush}"
                               HorizontalAlignment="Stretch"
                               FontSize="{DynamicResource GroupBoxHeaderFontSize}"
                               FontWeight="Light" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComercialWindow"
           TargetType="controls:MetroWindow"
           BasedOn="{StaticResource {x:Type controls:MetroWindow}}">

        <Setter Property="GlowBrush" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="WindowTransitionsEnabled" Value="False" />
        <Setter Property="Language" Value="pt-BR" />
        <Setter Property="WindowState" Value="Maximized"></Setter>
        <!-- ICONE Setter Property="Icon" Value="../../Resources/Imagens/logo48x48.png" /-->
        <Setter Property="ShowIconOnTitleBar" Value="True" />
        <Setter Property="Title" Value="Sistema Thor"></Setter>
    </Style>

    <Style x:Key="ToggleSwitchWin10" TargetType="controls:ToggleSwitch"
           BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="ComercialDialog"
           TargetType="controls:MetroWindow"
           BasedOn="{StaticResource {x:Type controls:MetroWindow}}">

        <Setter Property="GlowBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="WindowTransitionsEnabled" Value="False" />
        <Setter Property="Language" Value="pt-BR" />
        <Setter Property="SizeToContent" Value="Height"></Setter>
        <!--Setter Property="Icon" Value="../../Resources/Imagens/logo48x48.png" /-->
        <Setter Property="ShowIconOnTitleBar" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowButtonCommandsOverlayBehavior" Value="Never" />
    </Style>

    <Style x:Key="ComercialDataGrid" TargetType="DataGrid" BasedOn="{StaticResource MetroDataGrid}"></Style>

    <Style x:Key="ComercialAzureDataGrid" TargetType="DataGrid" BasedOn="{StaticResource AzureDataGrid}">
    </Style>

    <Style x:Key="ComercialDataGridRow"  BasedOn="{StaticResource MetroDataGridRow}" TargetType="{x:Type DataGridRow}" >
    </Style>

    <Style x:Key="ExpanderGThorMenu" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ToggleButton.FocusVisualStyle>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Blue" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.FocusVisualStyle>
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}" >
                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="19"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                            <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="19"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid>
                                                                <Grid.LayoutTransform>
                                                                    <TransformGroup>
                                                                        <RotateTransform Angle="-90"/>
                                                                    </TransformGroup>
                                                                </Grid.LayoutTransform>
                                                                <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                            </Grid>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="19"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid>
                                                                <Grid.LayoutTransform>
                                                                    <TransformGroup>
                                                                        <RotateTransform Angle="180"/>
                                                                    </TransformGroup>
                                                                </Grid.LayoutTransform>
                                                                <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                            </Grid>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                            <Setter Property="Style" TargetName="HeaderSite">
                                <Setter.Value>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="19"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid>
                                                                <Grid.LayoutTransform>
                                                                    <TransformGroup>
                                                                        <RotateTransform Angle="90"/>
                                                                    </TransformGroup>
                                                                </Grid.LayoutTransform>
                                                                <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                                <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                            </Grid>
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                            <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource GThorTextBox}" />
    <Style TargetType="PasswordBox" BasedOn="{StaticResource ComercialPasswordBox}" />
    <Style TargetType="GroupBox" BasedOn="{StaticResource ComercialGroupBox}" />
    <Style TargetType="ComboBox" BasedOn="{StaticResource ComercialComboBox}" />
    <Style TargetType="controls:ToggleSwitch" BasedOn="{StaticResource ToggleSwitchWin10}" />
    <Style TargetType="RadioButton" BasedOn="{StaticResource ComercialRadioButton}" />
    <Style TargetType="CheckBox" BasedOn="{StaticResource ComercialCheckBox}" />
    <Style TargetType="Button" BasedOn="{StaticResource ComercialFlatButton}" />
    <Style TargetType="DataGrid" BasedOn="{StaticResource ComercialAzureDataGrid}" />
    <Style TargetType="DataGridRow" BasedOn="{StaticResource ComercialDataGridRow}"></Style>


</ResourceDictionary>